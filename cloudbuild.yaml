steps:
  - id: 'branch name'
    name: 'alpine'
    entrypoint: 'sh'
    args:
      - 'c'
      - |
          echo "***********************"
          echo "$BRANCH_NAME"
          echo "***********************"

  - id: 'tf init'
    name: 'hashicorp/terraform:1.9.0'
    entrypoint: 'sh' 
    args:
      - '-c'
      - |
          if [ -d "environments/$BRANCH_NAME" ]; then
            cd environments/$BRANCH_NAME
            terraform init 
          else
            for dir in environments/*/
            do
              cd ${dir}   
              env=${dir} #Removes trailing slash from path (e.g., environments/dev/ → environments/dev).
              env=${env#*/} #Removes leading environments/, leaving you with just the environment name (e.g., dev).
              echo ""
              echo "*************** TERRAFORM INIT ******************"
              echo "******* At environment: ${env} ********"
              echo "*************************************************"
              terraform init || exit 1
              cd ../../
            done
          fi

  - id: 'tf plan'
    name: 'hashicorp/terraform:1.9.0'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
          if [ -d "environments/$BRANCH_NAME" ]; then
            cd environments/$BRANCH_NAME
            terraform plan 
          else
            for dir in environments/*/
            do
              cd ${dir}   
              env=${dir} #Removes trailing slash from path (e.g., environments/dev/ → environments/dev).
              env=${env#*/} #Removes leading environments/, leaving you with just the environment name (e.g., dev).
              echo ""
              echo "*************** TERRAFORM INIT ******************"
              echo "******* At environment: ${env} ********"
              echo "*************************************************"
              terraform plan || exit 1
              cd ../../
            done
          fi

  - id: 'tf apply'
    name: 'hashicorp/terraform:1.9.0'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
          if [ -d "environments/$BRANCH_NAME/" ]; then
            cd environments/$BRANCH_NAME
            terraform apply -auto-approve
          else
            echo "***************************** SKIPPING APPLYING *******************************"
            echo "Branch '$BRANCH_NAME' does not represent an official environment."
            echo "*******************************************************************************"
          fi
options:
  logging: CLOUD_LOGGING_ONLY